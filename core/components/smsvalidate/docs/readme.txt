--------------------
smsValidate
--------------------
Author: Ivanov Alexey <alexxx.abc@yandex.ru>
--------------------

Компонент для MODX Revolution, который позволяет производить валидацию по СМС при отправке формы компонентом AjaxForm.
Компонент работает при наличии установленного AjaxForm, должен быть подключен jquery.


Быстрый старт
1. Установить компонент из транспортного пакета.
2. В коде вызова сниппета AjaxForm добавить параметры:
	
   'renderHooks' => 'smsValidateInit',
   'customValidators' => 'smsValidate',
	в параметр 'validate' добавить обращение к СМС-валидатору 'sms_code:smsValidate=^phone^' (где 'phone - имя поля для ввода телефона)
	----------------
    пример вызова сниппета в шаблоне 'Валидация формы'. Классы разметки с префиксом js служебные, их нельзя удалять или менять, также нельзя удалять инпуты и спан с классом error_sms_code из этого контейнера.	

2. В коде чанка с формой добавить блок с разметкой поля для валидации по СМС. Пример в чанке 'smsvalidate_form'

--------------------

Есть настройки компонента:

1. smsvalidate.sms_time_limit - время до повторной отправки СМС (в секундах) - если пусто, выставляется 30 секунд по умолчанию.
2. smsvalidate.sms_test - включение тестового режима - если выбрать 'да', то СМС на введенный в форме номер телефона не отправляется, а сгенерированный код выводится на экран
3. smsvalidate.sms_button_repeat_class - класс кнопки для повторной отправки СМС - кнопка для повторной отправки СМС в форме генерируется компонентом автоматически, есть возможность задать ей свой класс для css-стилизации
4. smsvalidate.sms_code_length - длина СМС-кода (не более 10)
5. smsvalidate.sms_handler_class - класс СМС-обработчика - вводится название класса СМС провайдера, об этом ниже.

--------------------
Все классы СМС-провайдеров должны находиться в директории /core/components/smsvalidate/model/smsvalidate/handlers/ . В исходном варианте у компонента есть три класса для отправки СМС: 

1. smsRu, файл smsru.class.php (сервис sms.ru) 
2. intisteleSms, файл intistelesms.class.php (сервис intistele.com)
3. smscRu - файл smscru.class.php (сервис smsc.ru) 

По умолчанию выбран класс smsRu. Данные доступа по API нужно вписать в конфиг конструктора класса самостоятельно.

--------------------
Для другого СМС-провайдера можно добавить свой класс: необходимо, чтобы название файла с классом было с суффиксом .class.php и чтобы класс был наследован от интерфейса sendSmsInterface, в котором заданы обязательные методы __construct() и send(). 

В метод __construct() должен быть передан объект класса modX.
В метод send() передаются номер телефона и проверочный код, метод возвращает true в случае успешной отправки СМС, либо false.

